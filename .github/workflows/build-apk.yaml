name: Build App locally and run security analysis

# Use https://github.com/nektos/act to run this locally
# INSTALL:
#   curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/nektos/act/master/install.sh | sudo bash
# PREPARE: you need to have a `testnet` project in EAS:
#   export EXPO_NODE_ENV=testnet
#   export EXPO_FIRST_TIME=true
#   yarn run build:android
#   echo "Set the value of `expoProjectId` in src/config/config.testnet.json"
# RUN:
#   act -j build-android -s EXPO_TOKEN="${EXPO_TOKEN}"

on:
  push

jobs:
  build-android:
    runs-on: ubuntu-20.04
    env:
      EXPO_NODE_ENV: testnet
      EXPO_PLATFORM: android
      NODE_VERSION: 22.3.0
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      # https://expo.dev/accounts/[account]/settings/access-tokens
    container:
      image: cimg/android:2024.01-ndk
      # See https://circleci.com/developer/images/image/cimg/android#image-tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # - name: Remove unused space on disk
      #   run: |
      #     sudo apt-get clean
      #     sudo rm -rf /var/lib/apt/lists/*
      #     sudo rm -rf /tmp/*
      #     sudo rm -rf /var/tmp/*
      #     sudo rm -rf /var/cache/*
      #     sudo rm -rf /var/log/*
      #     sudo rm -rf /var/backups/*
      #     sudo rm -rf /var/lib/docker/tmp/*
          
      - name: Hello actor
        if: ${{ github.actor == 'nektos/act' }}
        run: echo "Hello '$GITHUB_ACTOR'"
      
      - name: Goodbye actor
        if: ${{ github.actor != 'nektos/act' }}
        run: echo "Goodbye '$GITHUB_ACTOR'"

      - name: ðŸš€ Build and publish tonomy app
        # if: ${{ github.actor != 'nektos/act' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: corepack enable
      - run: yarn --immutable
      - run: yarn run build:prepare
      - run: npx eas build --clear-cache --profile testnet-internal --platform "${EXPO_PLATFORM}" --local

      # - name: Install nodejs
      #   run: |
      #     wget "nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz"
      #     sudo tar -C /usr/local --strip-components 1 -xzf "node-v${NODE_VERSION}-linux-x64.tar.gz"
      #     sudo corepack enable
      #     node -v && npm -v && yarn -v

      # - name: ðŸš€ Build Android .apk app
      #   run: |
      #     node -v && yarn -v
      #     yarn --immutable
      #     yarn run build:prepare
      #     npx eas build --clear-cache --profile testnet-internal --platform "${EXPO_PLATFORM}" --local

      # - name: Find APK file and rename it so it can be added as an artifact
      #   run: find . -name "*.apk" -exec mv {} TonomyID.apk \;

      # - name: Archive Android APK as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: TonomyID-Android
      #     path: ./TonomyID.apk
