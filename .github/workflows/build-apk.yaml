name: Build App locally and run security analysis

on:
  pull_request:
    branches-ignore:
      - master

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      EXPO_NODE_ENV: demo
      EXPO_PLATFORM: android
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    container: cimg/android:2022.12.1-ndk

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ðŸš€ Build and publish tonomy app
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1
      - run: corepack enable
      - run: yarn --immutable
      - run: yarn run build:prepare
      - run: npx eas build --clear-cache --profile demo-apk --platform android --local

      - name: Find APK file and rename it
        run: find . -name "*.apk" -exec mv {} TonomyID.apk \;

      - name: Archive Android APK
        uses: actions/upload-artifact@v3
        with:
          name: TonomyID-Android
          path: ./TonomyID.apk
  
  # security-test:
  #   runs-on: ubuntu-latest
  #   needs: build-android
  #   container:
  #     image: cimg/python:3.9.6
  #     options: --user root
    
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Download APK file
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: TonomyID-Android
  #         path: ./TonomyID.apk

  #     - name: Install MobSF
  #       run: pip install --upgrade mobsfscan
      
  #     - name: Run MobSF Analysis html
  #       run: mobsfscan --html --type android --output mobsf-report.html ./TonomyID.apk

  #     - name: Check for file
  #       run: ls -l

  #     - name: Run MobSF Analysis json
  #       run: mobsfscan --json --type android --output mobsf-report.json ./TonomyID.apk

  #     - name: Check for file
  #       run: |
  #         ls -l
  #         cat mobsf-report.json
 
  # security-test2:
  #   runs-on: ubuntu-latest
  #   needs: build-android
  #   permissions:
  #     contents: read # for actions/checkout to fetch code
  #     security-events: write # for github/codeql-action/upload-sarif to upload SARIF results

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Download APK file
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: TonomyID-Android
  #         path: ./TonomyID.apk

  #     - name: Check for file
  #       id: check_file
  #       run: |
  #         echo "$PWD/TonomyID.apk"
  #         echo "APK_FILE=$PWD/TonomyID.apk" >> $GITHUB_ENV
  #         test -f "$PWD/TonomyID.apk" && echo "File exists" || echo "File does not exist"
      
  #     - name: Check variable
  #       run: |
  #         echo "APK_FILE: $APK_FILE"
  #         echo "env.APK_FILE: ${{ env.APK_FILE }}"

  #     - name: Fix Permissions for MobSF Docker
  #       run: |
  #         set -e
  #         sudo mkdir -p /home/runner/work/_temp/_github_home
  #         sudo chown -R 9901:9901 /home/runner/work/_temp/_github_home

  #         sudo mkdir -p /home/runner/work/$REPO_NAME/$REPO_NAME
  #         sudo chown -R 9901:9901 /home/runner/work/$REPO_NAME/$REPO_NAME
  #       env:
  #         REPO_NAME: "${{ github.event.repository.name }}"

  #     - name: Run MobSF Analysis
  #       uses: fundacaocerti/mobsf-action@v1.7.2
  #       # uses: fundacaocerti/mobsf-action@@96f53daa4d68a2caaeb5caf23ded96a10ebaf87b #v1.7.1
  #       # TODO: update to latest version fundacaocerti/mobsf-action after they fix https://github.com/fundacaocerti/mobsf-action/issues/20
  #       env:
  #         INPUT_FILE_NAME: "TonomyID.apk"
  #         SCAN_TYPE: apk
  #         OUTPUT_FILE_NAME: mobsf-report
  #     - run: ls -la
  
  #     - name: Check for file
  #       run: ls -l

  #     - name: Check mobsf-report file
  #       run: |
  #         test -f "./mobsf-report.html" && echo ".html File exists" || echo "File does not exist"
  #         test -f "./mobsf-report" && echo ". File exists" || echo "File does not exist"
  #         test -f "./mobsf-report.pdf" && echo ".pdf File exists" || echo "File does not exist"
        
  #     - name: Upload MobSF Analysis PDF Result
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: mobsf-report.pdf
  #         path: mobsf-report.pdf

  #     - name: Upload MobSF Analysis JSON Result
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: mobsf-report.json
  #         path: mobsf-report.json
  
  # security-test3:
  #   runs-on: ubuntu-latest
  #   needs: build-android
  #   permissions:
  #     contents: read # for actions/checkout to fetch code
  #     security-events: write # for github/codeql-action/upload-sarif to upload SARIF results

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Download APK file
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: TonomyID-Android
  #         path: ./TonomyID.apk
      
  #     - name: Setup python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: 3.8

  #     - name: Run mobsfscan on source code
  #       uses: MobSF/mobsfscan@a60d10a83af68e23e0b30611c6515da604f06f65
  #       with:
  #         args: . --html --output results.html || true
      
  #     - name: Check for file
  #       run: ls -l
      
  #     # - name: mobsfscan
  #     #   uses: MobSF/mobsfscan@main
  #     #   with:
  #     #     args: '--help'
  #     #     # args: '--html --json --type=android --out=mobsf-report ./TonomyID.apk'
      
  #     # - uses: actions/setup-python@v4
  #     #   with:
  #     #     python-version: '3.10' 
  #     # - run: pip install mobsfscan
  #     # - run: mobsfscan --html --json --type=android --out=mobsf-report ./TonomyID.apk

  security-test4:
    runs-on: ubuntu-latest
    needs: build-android
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results

    steps:
      - uses: actions/checkout@v3

      - name: Download APK file
        uses: actions/download-artifact@v2
        with:
          name: TonomyID-Android
          path: ./mobsf/TonomyID.apk

      - name: Check for file
        id: check_file
        run: |
          echo "$PWD/TonomyID.apk"
          echo "APK_FILE=$PWD/TonomyID.apk" >> $GITHUB_ENV
          test -f "$PWD/TonomyID.apk" && echo "File exists" || echo "File does not exist"
      
      - name: Check variable
        run: |
          echo "APK_FILE: $APK_FILE"
          echo "env.APK_FILE: ${{ env.APK_FILE }}"

      - name: Install MobSF
        run: docker build ./mobsf -t mobsf
      
      - name: Run MobSF
        run: docker run -it -u root -v $PWD/mobsf:/github/workspace/:rw -e GITHUB_WORKSPACE=/github/workspace -e INPUT_FILE_NAME=TonomyID.apk -e OUTPUT_FILE_NAME=mobsf-report -e SCAN_TYPE=apk mobsf
  
      - name: Check for file
        run: ls -l ./mobsf

      - name: Check mobsf-report file
        run: |
          test -f "./mobsf/mobsf-report.pdf" && echo ".html File exists" || echo "File does not exist"
          test -f "./mobsf/mobsf-report.json" && echo ". File exists" || echo "File does not exist"
        
      - name: Upload MobSF Analysis PDF Result
        uses: actions/upload-artifact@v2
        with:
          name: mobsf-report.pdf
          path: ./mobsf/mobsf-report.pdf

      - name: Upload MobSF Analysis JSON Result
        uses: actions/upload-artifact@v2
        with:
          name: mobsf-report.json
          path: ./mobsf/mobsf-report.json
  